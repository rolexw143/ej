Q.9 b) Develop a Hibernate application to store Feedback of Website Visitor in MySQL 
Database.
Step 1: Create MySql Database
Create table guestbook (no int primary key auto_increment, name varchar(20), msg 
varchar(100), dt varchar(40));
Step 2: Create a Hibernate Project :-
File -> New Project -> Java Web -> Web application - > Next -> give the project name -
> browse the location as required -> select the checkbox – “dedicated folder for storing 
libraries” -> Next 
Select glassfish server -> next 
Select frame work - hibernate -> select the respective database connection -> finish. 
Step 3: Adding Reverse Engineering File :-
Right click on Project -> new -> other -> select Hibernate -> Hibernate Reverse 
Engineering wizard file type -> next -> file name (hibernate.reveng) , folder -> click on 
browse and select src->java -> next -> select guestbook table name from the available 
tables option -> click add ( select the checkbox – include related files) -> finish.
Step 4: Adding Hibernate mapping files and POJOs from Database file type:-
Right click on Project -> new -> other -> select Hibernate -> Hibernate mapping files 
and POJOs from Database file type) -> next -> keep the default configuration file name 
file name (hibernate.cfg) and Hibernate Reverse Engineering File (hibernate.reveng) -> 
type the package name (hibernate) -> finish.
Step 5: Creating JSP File :-
Right click on project -> new -> JSP -> filename -> guestbookview -> select radiobutton 
-> JSP file (Standard syntax) -> Finish.



//index.jsp code 


<html><head>
<title>Guest Book</title>
</head>
<body>
Guest Book <hr><br><br>
<form action="guestbookview.jsp" >
 Name <input type="text" name="name" maxlength="20"><br>
 Message <textarea rows="5" cols="40" maxlength="100" name="msg"></textarea>
<br><input type="submit" value="submit">
</form>
</body>
</html>

//guestbookiew.jsp code 

<%@page import="org.hibernate.SessionFactory"%>
<%@page import="org.hibernate.Session"%>
<%@page import="org.hibernate.cfg.Configuration"%>
<%@page import="org.hibernate.Transaction"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="hibernate.Guestbook"%>
<%!
 SessionFactory sf;
 org.hibernate.Session ss;
 List<hibernate.Guestbook> gbook; 
%>
<%
 sf = new Configuration().configure().buildSessionFactory();
 ss= sf.openSession();
 Transaction tx=null;
 Guestbook gb=new Guestbook();
 try{
 tx=ss.beginTransaction();
 String name=request.getParameter("name");
 String msg=request.getParameter("msg");
 String dt=new java.util.Date().toString();
 gb.setName(name);
 gb.setMsg(msg);
 gb.setDt(dt);
 ss.save(gb);
 tx.commit(); 
 }
 catch(Exception e){ out.println("Error"+e.getMessage()); } 
 try{
 ss.beginTransaction();
 gbook=ss.createQuery("from Guestbook").list(); 
 } 
 catch(Exception e){ } 
%>
<html>
<head>
<title>Guest View</title>
</head>
<body>
 Guest View 
 Click here to go <a href="index.jsp"> BACK </a>
<br><br>
<%
Iterator it=gbook.iterator();
 while(it.hasNext())
 {
 Guestbook eachrecord=(Guestbook)it.next();
 out.print(eachrecord.getDt()+" ");
 out.print(eachrecord.getName()+"<br>");
 out.print(eachrecord.getMsg()+"<br><hr>");
 }
 %>
</body>
</html>



//GuestBookview.java code(Bydeauult)

package hibernate;
// Generated 4 Oct, 2018 9:40:17 AM by Hibernate Tools 4.3.1
/**
* Guestbook generated by hbm2java
*/
public class Guestbook implements java.io.Serializable {
 private Integer no;
 private String name;
 private String msg;
 private String dt;
 public Guestbook() {
 }
 public Guestbook(String name, String msg, String dt) {
 this.name = name;
 this.msg = msg;
 this.dt = dt;
 } 
 public Integer getNo() {
 return this.no;
 }
 public void setNo(Integer no) {
 this.no = no;
 }
 public String getName() {
 return this.name;
 }
 public void setName(String name) {
 this.name = name;
 }
 public String getMsg() {
 return this.msg;
 }
 public void setMsg(String msg) {
 this.msg = msg;
 }
 public String getDt() {
 return this.dt;
 }
 public void setDt(String dt) {
 this.dt = dt;
 }
}


