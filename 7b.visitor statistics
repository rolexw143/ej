Q.7 b) Develop simple visitor Statistics application using Message Driven Bean 
[Stateless Session Bean].
Step 1: Web-> web application -> Pract7BVisitorStatisticsMDBApp -> select dedicated 
folders for storing libraries -> finish.
Step2: Create a Database name visitorstat → Create table name → userstat → column 
names 
Firstvisitdt – timestamp
Hostname – varchar 30 Primary Key
Visits – int 
Step3: Create a Session Bean named as VisitorStatBean → Select Stateless → package name 
as ejb, do not select Local / Remote
Step 4: Right click on Source Packages → Select New→ Other→ Enterprise Java Bean →
MessageDrivenBean → EJB Name: BasicMessageBean →Package: ejb→ Select Project 
Destination → Click on Add Button → Destination Name: jms/Queue → Destination Type 
select the option Queue→ click on OK→ Click on Next → Activation Configuration 
Properties should be as it is. → Click on Finish
Step 5: 
Before deploying and running the application, Glassfish Server setting is required. 
Browse the path:
Localhost:4848 on any browser.
Find Resources -> connectors -> Connector Resources double click on Connector 
Resources -> click on ‘New’ Button -> write JNDI name as -> jms/QueryFactory.
Find Admin Object Resources and double click on that -> click on ‘New’ Button -> 
write JNDI name as -> jms/Queue. 
Now run index.jsp file.
Index.jsp:-
<%@page import="javax.jms.JMSException"%>
<%@page import="javax.naming.InitialContext"%>
<%@page import="javax.jms.Connection"%>
<%@page import="javax.jms.TextMessage"%>
<%@page import="javax.jms.MessageProducer"%>
<%@page import="javax.jms.Session"%>
<%@page import="javax.jms.Queue"%>
<%@page import="javax.jms.ConnectionFactory"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%! 
private static ConnectionFactory connectionFactory;
private static Queue queue;
Connection connection=null;
Session mySession=null;
MessageProducer messageProducer=null;
TextMessage message=null;
%>
<html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>JSP Page</title>
 </head>
 <body>
 Welcome to My Home Page
 <% 
 try{
 InitialContext ic= new InitialContext();
 queue= (Queue)ic.lookup("jms/Queue");
connectionFactory=(ConnectionFactory)ic.lookup("jms/QueryFactory");
 connection= connectionFactory.createConnection();
 mySession=connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
 messageProducer=mySession.createProducer(queue);
 message=mySession.createTextMessage();
 message.setText(request.getRemoteAddr());
 messageProducer.send(message);
 }
 catch(JMSException e)
 {
 System.out.println("Exception Occoured "+e.toString());
 } 
 %> 
 </body>
</html>
BasicMessageBean:-
package ejb;
import javax.annotation.Resource;
import javax.ejb.ActivationConfigProperty;
import javax.ejb.EJB;
import javax.ejb.MessageDriven;
import javax.ejb.MessageDrivenContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;
@MessageDriven(activationConfig = {
 @ActivationConfigProperty(propertyName = "destinationLookup", propertyValue = 
"jms/Queue"),
 @ActivationConfigProperty(propertyName = "destinationType", propertyValue = 
"javax.jms.Queue")
})
public class BasicMessageBean implements MessageListener {
@EJB VisitorStatBean vs;
@Resource
private MessageDrivenContext mdc;
 public BasicMessageBean() {
 }
 @Override
 public void onMessage(Message message) {
 try {
 if(message instanceof TextMessage){
 TextMessage msg= (TextMessage) message; 
 vs.addVisitor(msg.getText()); 
 }
 } 
 catch (JMSException e) {
 mdc.setRollbackOnly();
 }
 }
}
VisitorStatBean:-
package ejb;
import java.sql.*;
  mport javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.Stateless;
@Stateless
public class VisitorStatBean 
{
private Connection conn=null;
private ResultSet rs;
private Statement st=null;
private String query =null;
@PostConstruct
public void connect()
{
 try {
 Class.forName("com.mysql.jdbc.Driver").newInstance();
 conn=DriverManager.getConnection("jdbc:mysql://localhost/visitorstat", "root", 
"tiger"); 
 } 
 catch (Exception e) {
 System.err.println(e.getMessage()); 
 }
}
@PreDestroy
public void disconnect()
{
 try {
 conn.close(); 
 } catch (Exception e) {
 System.err.println(e.getMessage()); 
 }
}
public void addVisitor(String host)
{
 try {
 st= conn.createStatement();
query="insert into userstat (hostname,visits) values ('"+host+"','1')";
st.executeUpdate(query);
 } 
 catch (SQLException e) 
 {
 try {
 st=conn.createStatement();
query="update userstat set visits=visits+1 where hostname='"+host+"' ";
st.executeUpdate(query);
 }
 catch (SQLException ex) {
 System.err.println("Cannot Update"+e.getMessage());
 }
 }
}
}
